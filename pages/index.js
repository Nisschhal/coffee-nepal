import Head from "next/head"
import Image from "next/image"
import { Inter } from "@next/font/google"
import styles from "../styles/Home.module.css"
import Banner from "@/components/banner"
import Card from "@/components/card"
import coffeeStoresData from "../data/coffee-stores.json"
import { fetchCoffeeStores } from "@/lib/coffee-store"

import useTrackLocation from "../hook/use-track-location.js"
import { useEffect, useState } from "react"

export async function getStaticProps(context) {
  const coffeeStores = await fetchCoffeeStores()

  return {
    props: {
      coffeeStores: coffeeStores,
    }, // will be passed to the page component as props
  }
}
export default function Home(props) {
  const [nearCoffeeStores, setNearCoffeeStores] = useState([])
  const [nearCoffeeError, setNearCoffeeError] = useState(null)

  const { latlong, handleTranckLocation, locationErrorMsg, isLocating } =
    useTrackLocation()

  async function clickHandler() {
    console.log("hi banner button")
    await handleTranckLocation()
    // const coffeStores = await fetchCoffeeStores(latlong, 20)
    // console.log({ coffeStores })
    // setNearCoffeeStores(coffeStores)
  }
  useEffect(() => {
    const fetchWithCofee = async () => {
      if (latlong) {
        try {
          const fetchedCoffeeStores = await fetchCoffeeStores(latlong, 20)
          console.log("after lat lon", fetchedCoffeeStores)
          setNearCoffeeStores(fetchedCoffeeStores)
        } catch (error) {
          setNearCoffeeError(error.message)
        }
      }
    }
    fetchWithCofee()
  }, [latlong])
  // useEffect(() => {
  //   const fetchNearCofee = async () => {
  //     if (latlong) {
  //       console.log("inital")
  //       try {
  //         const coffeStores = await fetchCoffeeStores(latlong, 20)
  //         console.log({ coffeStores })

  //         setNearCoffeeStores(coffeStores)
  //       } catch (error) {
  //         console.log(error)
  //         setNearCoffeeError(error.message)
  //       }
  //     }
  //   }
  //   fetchNearCofee()
  // }, [latlong])

  console.log({ latlong, locationErrorMsg })
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <title>Coffee Nepal</title>
      </Head>
      <main className={styles.main}>
        <Banner
          buttonText={(isLocating && "Locating...") || "View near stores"}
          handleOnClick={clickHandler}
        />
        {locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}
        {nearCoffeeError && <p>Something went wrong: {nearCoffeeError}</p>}
        <div className={styles.heroImage}>
          <Image
            src="/static/hero-image.png"
            width={700}
            height={400}
            alt={"Hero image of coffee"}
          />
        </div>

        {nearCoffeeStores.length > 0 && (
          <>
            <h2 className={styles.heading2}>Stores near me</h2>
            <div className={styles.cardLayout}>
              {nearCoffeeStores.map((store) => (
                <Card
                  key={store.id}
                  name={store.name}
                  imageUrl={store.imgUrl}
                  href={`/coffee-store/${store.id}`}
                  className={styles.card}
                />
              ))}
            </div>
          </>
        )}

        {props.coffeeStores.length > 0 && (
          <>
            <h2 className={styles.heading2}>Kathmandu</h2>
            <div className={styles.cardLayout}>
              {props.coffeeStores.map((store) => (
                <Card
                  key={store.id}
                  name={store.name}
                  imageUrl={store.imgUrl}
                  href={`/coffee-store/${store.id}`}
                  className={styles.card}
                />
              ))}
            </div>
          </>
        )}
      </main>
    </>
  )
}
